name: Develop Branch CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Install dotnet format
      run: dotnet tool install -g dotnet-format
      
    - name: Run dotnet format
      run: dotnet format --verify-no-changes --verbosity diagnostic
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build with analyzers
      run: dotnet build --no-restore /p:EnforceCodeStyleInBuild=true /p:AnalysisMode=All
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Generate code metrics
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        dotnet new tool-manifest --force
        dotnet tool install dotnet-reportgenerator-globaltool
        dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
        dotnet reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"./CodeCoverage" -reporttypes:Html
      continue-on-error: true 

    - name: Verify migrations
      run: |
        dotnet tool install --global dotnet-ef
        dotnet ef migrations script --idempotent --output=migrations-script.sql --project Project.Infrastructure --startup-project Project.API
      continue-on-error: true  

  docker:
    runs-on: ubuntu-latest
    needs: build-and-analyze
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and tag Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: project-api:develop

